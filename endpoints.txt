/ app.post("/registro",
//   [ check("contraseña", "Disculpe, la contraseña es obligatoria")
//       .not()
//       .isEmpty(),
//     check("email", "El email es obligatorio").not().isEmpty(),
//   ],
//   (req, res) => {

//     const errors = validationResult(req);
//     if (!errors.isEmpty()) {
//       return res.status(422).json({ errores: errors.array() });
//     }

//     req.body.contraseña = bcrypt.hashSync(req.body.contraseña, 5);

//     const newUser = req.body;

//     if (!newUser) {
//       res.status(400).send("Bad request");
//     }
//     db.Usuario.create(newUser)
//       .then(() => res.status(200).send("Usuario creado exitosamente"))
//       .catch((err) =>
//         res.status(500).json({
//           errors: {
//             mensaje: err.errors[0].message,
//             campo: err.fields,
//           },
//         })
//       );
//   }
// );

// app.post("/login", (req, res) => {
//   const { body } = req;
//   const { email } = body;
//   const { contraseña } = body;
//   // buscar ese usuario en la base de datos
//   Usuario.findOne({
//     where: { email: email },
//   })
//     // si el usuario existe desencriptar la contraseña y compararla con la q manda
//     .then((usuarioDB) => {
//       if (usuarioDB) {
//         bcrypt.compare(contraseña, usuarioDB.contraseña, (err, result) => {
//           // result == true
//           if (err) {
//             return res.json({ err });
//           }

//           console.log("result--->", result);
//           if (result) {
//             jwt.sign({ email }, secreto, (err, token) => {
//               if (err) {
//                 return res.json({ err });
//               }

//               return res.send(token);
//             });
//           } else {
//             return res.send("Contraseña incorrecta");
//           }
//         });
//       } else {
//         return res.json("otro error más").status(403);
//       }
//     })
//     .catch((error) => {
//       return res.status(500).send(error);
//     });
// });



//fazt : singup: 2:11:35

//datos de base de datos remotemyql

Username: Q2gfbSmPW3

Database name: Q2gfbSmPW3

Password: C8eE5Isasu

Server: remotemysql.com

Port: 3306


//aca no trare nada
app.get("/", (req, res) => {

  //Traer todos
  db.Usuario.findAll({
    attributes: ["username"],
  })
    .then((usuarios) => {
      console.log("usuarios =>>> ", usuarios);
    })
    .catch((err) => {
      console.log("Error al traer el usuario", err);
    });



  //crear entrada en tabla
  // db.Usuario.create({
  //   username: 'ruperta',
  //   fullname: "rupertao garcia",
  //   email: "fulanescrrrrro@gmail.com",
  //   telefono: '351555823158',
  //   direccion_envio: "8 de mayo 123",
  //   contraseña: "fulanesco123"

  // }).then(()=>{
  //   console.log('creado el fulano');
  // })
  // .catch(()=>{
  //   console.log('error');

  // })


//});

//esto anda bien


Order.create({ status: "Pending", price: 300, pay_method: "cash", userId: 2, productId: 1, }), 